[project]
name = "addemongo"
version = "0.1.0"
description = "This project makes it easier to connect and manipulate traditional Mongo DB methods."
authors = [
    {name = "FernandoNogueiraPy", email = "fernandomoltt101@gmail.com"},
]
dependencies = [
    "pydantic>=2.6.3",
    "motor>=3.3.2",
]
requires-python = ">=3.11"
readme = "README.md"
license = {text = "MIT"}

[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"


[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]
dev = [
    "pytest>=8.0.2",
    "mypy>=1.8.0",
    "flake8>=7.0.0",
    "flake8-pyproject>=1.2.3",
    "isort>=5.13.2",
    "black>=24.2.0",
    "autoflake>=2.3.0",
    "motor-types>=1.0.0b4",
]



[tool.pdm.scripts]
test = "pytest"

pyright = "pyright ."
mypy = "mypy ."
flake8 = "flake8 ."
autoflake = "autoflake ."
isort = "isort ."
black = "black ."

format = { composite = ["autoflake", "flake8", "isort", "black"] }
lint = { composite = ["format", "mypy"] }


[tool.pytest.ini_options]
console_output_style = "progress"
testpaths = ["tests"]
python_classes = ["*Suite"]
python_files = ["test_*.py"]
python_functions = ["*_test"]


[tool.mypy]
pretty = true
color_output = true
disallow_untyped_defs = true
disable_error_code = "misc"
exclude = [
    ".venv",
    "venv",
    '.git',
    '.mypy_cache',
    '.pytest_cache',
    '__pycache__',
]


[tool.flake8]
max-line-length = 88
exclude = [
    ".git",
    "__pycache__",
    "__init__.py",
    ".mypy_cache",
    ".pytest_cache",
    "venv",
    ".venv",
]

[tool.autoflake]
check = false
in-place = true
recursive = true
exclude = ".git,venv,.venv,.mypy_cache,.pytest_cache,__pycache__"
remove-all-unused-imports = true
ignore-init-module-imports = true
remove-duplicate-keys = true
remove-unused-variables = true


[tool.isort]
profile = "black"
use_parentheses = true
src_paths = ["src", "test"]
remove_redundant_aliases = true
float_to_top = true
color_output = true


[tool.black]
color = true